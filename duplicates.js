const tripIds = ["69499671","69499691","69499703","69499731","69499779","69499791","69499801","69499842","69499878","69499900","69499916","69499939","69499940","69499979","69500010","69500032","69500057","69500079","69500097","69500122","69500140","69500170","69500185","69500213","69500262","69500327","69500403","69500426","69500448","69500470","69500488","69500512","69500534","69500551","69500573","69500598","69500621","69500675","69500706","69500746","69500777","69500827","69500869","69500896","69500929","69500951","69500967","69500984","69500999","69501015","69501028","69501036","69501053","69501093","69501119","69501159","69501185","69501217","69501239","69501272","69501304","69501330","69501352","69501370","69501385","69501402","69501422","69501446","69501474","69501499","69501520","69501540","69501554","69501583","69501620","69501654","69501682","69501692","69501705","69501718","69501730","69501744","69501755","69501774","69501795","69501818","69501845","69501866","69501893","69501932","69501935","69501950","69501974","69501980","69502014","69502039","69502063","69502085","69502111","69502136","69502174","69502197","69502227","69502253","69502274","69502295","69502317","69502337","69502355","69502379","69502405","69502461","69502487","69502524","69502540","69502551","69502571","69502580","69502600","69502631","69502732","69502757","69502782","69502802","69502828","69502829","69502830","69502865","69502867","69502868","69502896","69502899","69502939","69502964","69502981","69503013","69503040","69503041","69503042","69503073","69503088","69503120","69503160","69503187","69503188","69503241","69503252","69503253","69503256","69503338","69503341","69503342","69503393","69503407","69503420","69503433","69503448","69503459","69503492","69503547","69503594","69503625","69503655","69503686","69503716","69503731","69503748","69503765","69503781","69503796","69503813","69503835","69503858","69503891","69503929","69503966","69503997","69504023","69504070","69504117","69504164","69504214","69504247","69504263","69504291","69504320","69504345","69504365","69504386","69504406","69504427","69504446","69504464","69504481","69504498","69504516","69504533","69504555","69504581","69504607","69504632","69504655","69504675","69504695","69504716","69504736","69504764","69504800","69504813","69504831","69504850","69504866","69504884","69504889","69504899","69504977","69504979","69505047","69505071","69505136","69505137","69505203","69505228","69505258","69505309","69505311","69505378","69505379","69505381","69505429","69505484","69505490","69505585","69505586","69505587","69505588","69505589","69505590","69505591","69505592","69505593","69505681","69505682","69506183","69506210","69506235","69506308","69506322","69506336","69506348","69506362","69506376","69506390","69506405","69506416","69506427","69506447","69506467","69506486","69506508","69506530","69506550","69506577","69506611","69506641","69506665","69506688","69506708","69506729","69506772","69506794","69506816","69506834","69506854","69506872"] // your array
const uniqueTripIds = new Set(tripIds);

console.log({
    originalLength: tripIds.length,
    uniqueLength: uniqueTripIds.size,
    hasDuplicates: tripIds.length !== uniqueTripIds.size,
    duplicateCount: tripIds.length - uniqueTripIds.size
});

// To find the actual duplicates:
const findDuplicates = (arr) => {
    const counts = {};
    const duplicates = [];
    
    arr.forEach(id => {
        counts[id] = (counts[id] || 0) + 1;
        if (counts[id] === 2) duplicates.push(id);
    });
    
    return duplicates;
};

console.log("Duplicate IDs:", findDuplicates(tripIds));